<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Image to Text (OCR) — Extract Text from Photos | multiimagex</title>
  <meta name="description" content="Extract text from images using OCR in your browser. multiimagex uses Tesseract.js to convert pictures to editable text. Preview, copy, or download the extracted text.">
  <meta name="keywords" content="image to text, OCR online, extract text from image, tesseract js, free ocr">
  <link rel="canonical" href="http://www.multiimagex.online/tools/image-ocr/" />
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <style>body{font-family:Inter,Arial;margin:0;color:#222;background:#fff} header{background:#6c63ff;color:#fff;padding:14px;text-align:center} .container{max-width:900px;margin:18px auto;padding:16px} textarea{width:100%;min-height:160px;padding:10px;border-radius:8px;border:1px solid #ccc} button{padding:10px;border-radius:8px;border:1px solid #ccc;background:#fff;cursor:pointer} .btn-primary{background:#6c63ff;color:#fff;border:none}</style>
</head>
<body>
  <header><h1>multiimagex — Image to Text (OCR)</h1></header>
  <main class="container">
    <h2>Extract editable text from images</h2>
    <p>Upload a photo or screenshot and get the extracted text. Processing uses <strong>Tesseract.js</strong> in your browser — no uploads.</p>

    <input id="file" type="file" accept="image/*"><br><br>
    <button id="readBtn" class="btn-primary">Extract Text</button>
    <div id="status" style="margin-top:10px;color:#555"></div>
    <h3 style="margin-top:12px">Result</h3>
    <textarea id="out"></textarea>
    <div style="margin-top:8px"><button id="copyBtn">Copy Text</button> <button id="downloadTxt">Download Text</button></div>
  </main>
  <footer style="text-align:center;padding:16px;border-top:1px solid #eee">© 2025 <a href="http://www.multiimagex.online/">multiimagex</a></footer>

  <script src="https://unpkg.com/tesseract.js@4.0.2/dist/tesseract.min.js"></script>
  <script>
    const fileEl=document.getElementById('file');
    const readBtn=document.getElementById('readBtn');
    const status=document.getElementById('status');
    const out=document.getElementById('out');
    const copyBtn=document.getElementById('copyBtn');
    const downloadTxt=document.getElementById('downloadTxt');

    readBtn.addEventListener('click', async()=>{
      if(!fileEl.files.length){alert('Choose an image');return}
      const file=fileEl.files[0];
      const data=await readFile(file);
      status.textContent='Recognizing... (this may take a few seconds)';
      out.value='';
      const worker = Tesseract.createWorker({logger:m=>{ if(m.status) status.textContent = m.status + (m.progress? ' ' + Math.round(m.progress*100) + '%' : ''); }});
      await worker.load(); await worker.loadLanguage('eng'); await worker.initialize('eng');
      const { data: { text } } = await worker.recognize(data);
      out.value = text;
      status.textContent='Done';
      await worker.terminate();
    });

    copyBtn.addEventListener('click', ()=>{ navigator.clipboard.writeText(out.value).then(()=>alert('Copied to clipboard')); });
    downloadTxt.addEventListener('click', ()=>{ const blob=new Blob([out.value],{type:'text/plain'}); const a=document.createElement('a'); a.href=URL.createObjectURL(blob); a.download='extracted.txt'; a.click(); });

    function readFile(f){return new Promise((res)=>{const r=new FileReader();r.onload=()=>res(r.result);r.readAsDataURL(f);});}
  </script>
</body>
</html>
